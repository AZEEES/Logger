{"version":3,"sources":["./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/app/structure/structure.component.ts","./src/app/structure/structure.component.html","./src/app/structure.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/global-constants.ts","./src/app/app.module.ts","./src/app/login.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  public title = \"User Admin\";\n  public users = [];\n  public errorMsg;\n  public options_webapp = [\"Y\",\"N\"];\n  public options_android = [\"Y\",\"N\"];\n  public webapp_access = \"N\";\n  public logged_user;\n\n  constructor(\n    private _userService : UserService, \n    private _snackBar : MatSnackBar, \n    private _router : Router,\n    private _route : ActivatedRoute\n    ) {}\n\n  ngOnInit(): void {\n    this.get_users();\n    this.webapp_access =  this._route.snapshot.paramMap.get('webapp_access');\n    this.logged_user =  this._route.snapshot.paramMap.get('name');\n    if(this.webapp_access=='X'){\n      this.options_webapp.push('X');\n    }\n  }\n\n  editEnable(user){\n    // this.editEnabled = true;\n    user.edit_enabled = true;\n  }\n\n  get_users(){\n    console.log(\"Fetching users\");\n    this._userService.getUsers()\n      .subscribe(data =>{\n        data.sort(function(a, b){\n            var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase()\n            if (nameA < nameB) //sort string ascending\n                return -1 \n            if (nameA > nameB)\n                return 1\n            return 0 //default return value (no sorting)\n        })\n        this.users = data;\n       } ,\n        error => this.errorMsg = error);\n  }\n\n  add(){\n    // let passed_user = Object.assign({}, user);\n    let passed_user = Object.assign({}, this.users[0]);\n    passed_user.name=\"AAAAAAAA\";\n    passed_user.id=\"none\";\n    passed_user.phone=\"9876543210\";\n    passed_user.webapp_access=\"N\";\n    passed_user.app_access=\"N\";\n    passed_user.root_node=\"null\";\n    passed_user.root_node_name=\"VSTPS Stage 1\";\n    delete passed_user._id;\n    this._userService.addUser(JSON.stringify(passed_user))\n      .subscribe(data => { \n        this.openSnackBar(\"Adding \", data);\n        this.users = [];\n        this.get_users();  \n      },\n        error => this.errorMsg = error);\n  }\n\n  update(user){\n    this._userService.updateUser(user._id, JSON.stringify(user))\n      .subscribe(data => { this.openSnackBar(\"Updating \", data); user.edit_enabled=false; },\n                error => this.errorMsg = error);\n  }\n\n  delete(user){\n    this._userService.deleteUser(user._id)\n      .subscribe(data => { this.openSnackBar(\"Deleting \", data); user.is_hidden=true; },\n                error => this.errorMsg = error);\n  }\n\n  structure_admin(){\n    this._router.navigate(['../','structure'], { skipLocationChange: true });\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 10000,\n    });\n  }\n\n}\n","<h2>{{title}}</h2>\n<div class=\"btnCont\">\n    <button mat-raised-button class=\"col-sm-1 addButton\" color=\"primary\" (click)=\"add()\"> Create New User</button>\n    <button *ngIf=\"webapp_access=='X'\" mat-raised-button class=\"col-sm-1 addButton\" color=\"warn\" (click)=\"structure_admin()\"> Structure Admin</button>\n</div>\n<h2 class=\"hiddenTextClass\">a</h2>\n<mat-list *ngFor=\"let user of users\">\n    <mat-card class=\"userClass\" *ngIf=\"!user.is_hidden\">\n        <h3 class=\"col-sm-1\" *ngIf=\"!user.edit_enabled\" >{{user.name}}</h3>\n        <div class=\"col-sm-1\" *ngIf=\"user.edit_enabled\" >\n            <form>\n                <mat-form-field>\n                <mat-label>Name</mat-label>\n                <input matInput placeholder=\"Ex. Binod\" [(ngModel)]=\"user.name\" name=\"Name\" value=\"{{user.name}}\">\n                </mat-form-field>\n            </form>\n        </div>\n        \n        <h3 class=\"col-sm-1\" *ngIf=\"!user.edit_enabled\" >{{user.phone}}</h3>\n        <div class=\"col-sm-1\" *ngIf=\"user.edit_enabled\" >\n            <form>\n                <mat-form-field>\n                <mat-label>Phone</mat-label>\n                <input matInput placeholder=\"Ex. 9876543210\" [(ngModel)]=\"user.phone\" name=\"Phone\" value=\"{{user.phone}}\">\n                </mat-form-field>\n            </form>\n        </div>\n\n        <h3 class=\"col-sm-1\" *ngIf=\"!user.edit_enabled && webapp_access=='X'\" >{{user.password}}</h3>\n        <h3 class=\"col-sm-1\" *ngIf=\"!user.edit_enabled && webapp_access=='Y'\" >**************</h3>\n        <div class=\"col-sm-1\" *ngIf=\"user.edit_enabled\" >\n            <form>\n                <mat-form-field>\n                <mat-label>Password</mat-label>\n                <input matInput placeholder=\"Ex. abc@1234\" [(ngModel)]=\"user.password\" name=\"Password\" value=\"{{user.password}}\">\n                </mat-form-field>\n            </form>\n        </div>\n\n        <h4 class=\"col-sm-1\" *ngIf=\"!user.edit_enabled\" >Webapp access :  {{user.webapp_access}}</h4>\n        <div class=\"col-sm-1\" *ngIf=\"user.edit_enabled\" class=\"structCompClass\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Webapp Access</mat-label>\n                <mat-select (click)=\" $event.stopPropagation();\" [(ngModel)]=\"user.webapp_access\" >\n                <mat-option *ngFor=\"let option of options_webapp\" [value]=\"option\">\n                    {{option}} \n                </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <h4 class=\"col-sm-1\" *ngIf=\"!user.edit_enabled\" >Android access :  {{user.app_access}}</h4>\n        <div class=\"col-sm-1\" *ngIf=\"user.edit_enabled\" class=\"structCompClass\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Android Access</mat-label>\n                <mat-select (click)=\" $event.stopPropagation();\" [(ngModel)]=\"user.app_access\" >\n                <mat-option *ngFor=\"let option of options_android\" [value]=\"option\">\n                    {{option}} \n                </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n\n\n            <button mat-raised-button class=\"col-sm-1 customButton\" color=\"accent\" *ngIf=\"!user.edit_enabled\" [disabled]=\"webapp_access=='Y' && user.webapp_access=='X'\" (click)=\"editEnable(user)\">Edit</button>\n            <button mat-raised-button class=\"col-sm-1 customButton\" color=\"accent\" *ngIf=\"user.edit_enabled\" (click)=\"update(user)\" >Update</button>\n            <button mat-raised-button class=\"col-sm-1 customButton\" color=\"warn\" [disabled]=\"webapp_access=='Y' && user.webapp_access=='X'\" (click)=\"delete(user)\">Delete</button>\n    </mat-card>\n</mat-list>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input } from '@angular/core';\nimport { StructureService } from '../structure.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-structure',\n  templateUrl: './structure.component.html',\n  styleUrls: ['./structure.component.css']\n})\n\nexport class StructureComponent implements OnInit {\n\n  @Input() parent_id : string = 'null';\n\n  public title = \"Structure Admin\";\n  public panelOpenState = false;\n  public structures = [];\n  public childs = [];\n  public editEnabled = false;\n  public dtypes = [\"number\", \"text\", \"checkbox\", \"dropdown\", \"long-text\"];\n  public bool = true;\n\n  public errorMsg;\n  public successMsg;\n\n  constructor(private _structureService : StructureService, private _snackBar : MatSnackBar) { }\n\n  ngOnInit(): void {\n    // this.getStructures();\n    console.log(\"Parent_id : \" + this.parent_id);\n    this.getChilds();\n  }\n\n  destroyExpansion(){\n    // this.bool = false;\n    console.log(\"Destroying\");\n  }\n\n  editEnable(child){\n    // this.editEnabled = true;\n    child.edit_enabled = true;\n  }\n\n  update(child){\n    this._structureService.updateStructure(child._id, JSON.stringify(child))\n      .subscribe(data => { this.openSnackBar(\"Updating \", data); child.edit_enabled=false; },\n                error => this.errorMsg = error);\n  }\n\n  add(child){\n    let passed_child = Object.assign({}, child);\n    // let passed_child = child;\n    passed_child.name=\"New Entry\";\n    if(passed_child.level_leaf=='M'){\n      passed_child.level_leaf=\"M\";\n    }\n    else if(passed_child.level_leaf=='L2'){\n      passed_child.level_leaf=\"L1\";\n    }\n    else if(passed_child.level_leaf=='L1'){\n      passed_child.level_leaf=\"L0\";\n    }\n    \n    passed_child.parent=passed_child._id;\n    passed_child.id = \"none\";\n    delete passed_child._id;\n    this._structureService.addStructure(JSON.stringify(passed_child))\n      .subscribe(data => { this.openSnackBar(\"Adding \", data); child.edit_enabled=false; },\n                error => this.errorMsg = error);\n  }\n\n  delete(child){\n    this._structureService.deleteStructure(child._id)\n      .subscribe(data => { this.openSnackBar(\"Deleting \", data); child.is_hidden=true; },\n                error => this.errorMsg = error);\n  }\n\n  openPanel(id){\n    console.log(id  + \" opened\");\n  }\n  \n  getStructures(){\n    console.log(\"Structures api callled\");\n    this._structureService.getStructure()\n      .subscribe(data => this.structures = data,\n                error => this.errorMsg = error);\n  }\n\n  getChilds(){\n    console.log(\"Childs api callled\");\n    this._structureService.getChilds(this.parent_id)\n      .subscribe(data =>{this.childs = data; this.fillAllowedLevels(this.childs);} ,\n                error => this.errorMsg = error);\n  }\n\n  fillAllowedLevels(childs){\n    for(const child of childs){\n      if(child.level_leaf=='M'){\n        child.levels_allowed = [\"M\",\"L2\"];\n      }\n      else if(child.level_leaf=='L2'){\n        child.levels_allowed = [\"M\",\"L2\"];\n      }\n      else if(child.level_leaf=='L1' || child.level_leaf=='L0'){\n        child.levels_allowed = [\"L1\",\"L0\"]\n      }\n    }\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 10000,\n    });\n  }\n\n\n\n\n}\n","<h2 *ngIf=\"parent_id=='null'\" >{{title}}</h2>\n<mat-accordion *ngFor=\"let child of childs\">\n    <mat-expansion-panel showToggle (opened)=\"openPanel(child._id)\" *ngIf=\"!child.is_hidden\" (closed)=\"destroyExpansion()\" >\n    <mat-expansion-panel-header>\n        <mat-panel-title>\n            <h3 *ngIf=\"!child.edit_enabled\" >{{child.name}}</h3>\n            <div class=\"structTitleClass\" *ngIf=\"child.edit_enabled\" >\n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                    <mat-label>Name</mat-label>\n                    <input matInput placeholder=\"Ex. Unit 1\" [(ngModel)]=\"child.name\" name=\"Name\" value=\"{{child.name}}\" (click)=\"$event.stopPropagation();\" (keydown)=\"$event.stopPropagation();\">\n                    </mat-form-field>\n                </form>\n            </div>\n        </mat-panel-title>\n        <mat-panel-description>\n            <div class=\"structCompClass\">\n                <h4 *ngIf=\"!child.edit_enabled\" >Layer :  {{child.level_leaf}}</h4>\n                <div *ngIf=\"child.edit_enabled\" class=\"structCompClass\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Level Layer</mat-label>\n                        <mat-select (click)=\" $event.stopPropagation();\" [(ngModel)]=\"child.level_leaf\" >\n                        <mat-option *ngFor=\"let level of child.levels_allowed\" [value]=\"level\">\n                            {{level}} \n                        </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"L0Class\" *ngIf=\"child.level_leaf=='L0'\">\n                <div class=\"structComp2Class\">\n                    <h4 *ngIf=\"!child.edit_enabled\" >DataType :  {{child.dtype}}</h4>\n                    <div *ngIf=\"child.edit_enabled\" class=\"structCompClass\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Data Type</mat-label>\n                            <mat-select (click)=\"$event.stopPropagation();\" [(ngModel)]=\"child.dtype\" >\n                            <mat-option *ngFor=\"let dtype of dtypes\" [value]=\"dtype\">\n                                {{dtype}} \n                            </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <h3 class=\"structComp3Class\" *ngIf=\"!child.edit_enabled\" >Low Limit : {{child.low_lim}}</h3>\n                <div class=\"structComp2Class\" *ngIf=\"child.edit_enabled\" >\n                    <form class=\"example-form\">\n                        <mat-form-field class=\"example-full-width\">\n                        <mat-label>Low Limit</mat-label>\n                        <input matInput placeholder=\"Ex. 0.0\" [(ngModel)]=\"child.low_lim\" name=\"Low Limit\" value=\"{{child.low_lim}}\" (click)=\"$event.stopPropagation();\" (keydown)=\"$event.stopPropagation();\">\n                        </mat-form-field>\n                    </form>\n                </div>\n                <h3 class=\"structComp3Class\" *ngIf=\"!child.edit_enabled\" >High Limit : {{child.high_lim}}</h3>\n                <div class=\"structComp2Class\" *ngIf=\"child.edit_enabled\" >\n                    <form class=\"example-form\">\n                        <mat-form-field class=\"example-full-width\">\n                        <mat-label>High Limit</mat-label>\n                        <input matInput placeholder=\"Ex. 100.0\" [(ngModel)]=\"child.high_lim\" name=\"High Limit\" value=\"{{child.high_lim}}\" (click)=\"$event.stopPropagation();\" (keydown)=\"$event.stopPropagation();\">\n                        </mat-form-field>\n                    </form>\n                </div>\n                <h3 class=\"structComp3Class\" *ngIf=\"!child.edit_enabled\" >Unit : {{child.unit}}</h3>\n                <div class=\"structComp2Class\" *ngIf=\"child.edit_enabled\" >\n                    <form class=\"example-form\">\n                        <mat-form-field class=\"example-full-width\">\n                        <mat-label>Unit</mat-label>\n                        <input matInput placeholder=\"Ex. KSc\" [(ngModel)]=\"child.unit\" name=\"Unit\" value=\"{{child.unit}}\" (click)=\"$event.stopPropagation();\" (keydown)=\"$event.stopPropagation();\">\n                        </mat-form-field>\n                    </form>\n                </div>\n                <h3 class=\"structComp3Class\" *ngIf=\"!child.edit_enabled && child.dtype=='dropdown'\" >Slider Entries : {{child.slider_entries}}</h3>\n                <div class=\"structComp2Class\" *ngIf=\"child.edit_enabled && child.dtype=='dropdown'\" >\n                    <form class=\"example-form\">\n                        <mat-form-field class=\"example-full-width\">\n                        <mat-label>Slider Entries</mat-label>\n                        <input matInput placeholder=\"Ex. A,B,C\" [(ngModel)]=\"child.slider_entries\" name=\"SliderEntries\" value=\"{{child.slider_entries}}\" (click)=\"$event.stopPropagation();\" (keydown)=\"$event.stopPropagation();\">\n                        </mat-form-field>\n                    </form>\n                </div>\n            </div>\n            <button mat-raised-button color=\"accent\" *ngIf=\"!child.edit_enabled\" (click)=\"$event.stopPropagation(); editEnable(child)\" >Edit</button>\n            <button mat-raised-button color=\"accent\" *ngIf=\"child.edit_enabled\" (click)=\"$event.stopPropagation(); update(child)\" >Update</button>\n            <button mat-raised-button color=\"warn\" (click)=\"$event.stopPropagation(); delete(child)\">Delete</button>\n            <button mat-raised-button *ngIf=\"child.level_leaf!='L0'\" color=\"primary\" (click)=\"$event.stopPropagation(); add(child)\">Add Child</button>            \n        </mat-panel-description>\n    </mat-expansion-panel-header>\n    <ng-template matExpansionPanelContent>\n        <app-structure [parent_id]=child._id></app-structure>\n    </ng-template>\n    </mat-expansion-panel>\n</mat-accordion>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule, HttpErrorResponse, HttpParams, HttpClient } from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { IStructure } from './structure';\nimport { GlobalConstants } from './global-constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StructureService {\n  private server_ip = GlobalConstants.ip_server;\n  private _url_structure : string = \"http://\" + this.server_ip + \"/api/structure\";\n  private _url_structure_childs : string = \"http://\" + this.server_ip + \"/api/structure/getChilds\";\n  private _url_structure_update : string = \"http://\" + this.server_ip + \"/api/structure/update\";\n  private _url_structure_add : string = \"http://\" + this.server_ip + \"/api/structure/add\";\n  private _url_structure_delete : string = \"http://\" + this.server_ip + \"/api/structure/delete\";\n\n  constructor(private http : HttpClient) { }\n\n  getStructure() : Observable <IStructure[]>{\n    return this.http.get<IStructure[]>(this._url_structure)\n            .pipe(catchError(this.handleError));\n  }\n\n  getChilds(parent_id) : Observable <IStructure[]>{\n    let params = new HttpParams().set(\"parent\",parent_id);\n    return this.http.get<any>(this._url_structure_childs, {params : params})\n            .pipe(catchError(this.handleError));\n  }\n\n  updateStructure(id, structure) : Observable <any>{\n    let params = new HttpParams().set(\"id\", id).set(\"structure\", structure);\n    console.log(structure);\n    return this.http.get<any>(this._url_structure_update, {params : params})\n            .pipe(catchError(this.handleError));\n  }\n\n  addStructure(structure) : Observable <any>{\n    let params = new HttpParams().set(\"structure\", structure);\n    console.log(structure);\n    return this.http.get<any>(this._url_structure_add, {params : params})\n            .pipe(catchError(this.handleError));\n  }\n\n  deleteStructure(id) : Observable <any>{\n    console.log(\"delete called\");\n    let params = new HttpParams().set(\"id\", id);\n    return this.http.get<any>(this._url_structure_delete, {params : params})\n            .pipe(catchError(this.handleError));\n  }\n\n  handleError(error : HttpErrorResponse){\n    return throwError(error || \"Server Error\"); \n  }\n  \n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Structure Admin';\n}\n","<div class=\"homeDiv\">\n    <router-outlet></router-outlet>\n</div>","export class GlobalConstants {\n    public static ip_server = \"3.134.88.27:3000\";\n    // public static ip_server = \"localhost:3000\";\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StructureComponent } from './structure/structure.component';\nimport { StructureService } from './structure.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonModule, MatButton } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule, MatSelect } from '@angular/material/select';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { UserComponent } from './user/user.component';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule, MatCardMdImage } from '@angular/material/card';\nimport { LoginComponent } from './login/login.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n \n@NgModule({\n  declarations: [\n    AppComponent,\n    StructureComponent,\n    UserComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatButtonModule, \n    MatInputModule,\n    MatSelectModule,\n    FormsModule, \n    MatSnackBarModule,\n    MatListModule,\n    MatCardModule,\n    MatIconModule,\n  \n  ],\n  providers: [StructureService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { GlobalConstants } from './global-constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private server_ip = GlobalConstants.ip_server;\n  private _url_login : string = \"http://\" + this.server_ip + \"/api/user/check_valid\";\n  constructor(private http: HttpClient) { }\n\n  attemptLogin(phone, password) : Observable <any>{\n    let params = new HttpParams().set(\"phone\", phone).set(\"password\", password);\n    return this.http.get<any>(this._url_login, {params : params})\n            .pipe(catchError(this.handleError));\n  }\n\n  handleError(error : HttpErrorResponse){\n    return throwError(error || \"Server Error\"); \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StructureComponent } from 'src/app/structure/structure.component';\nimport { UserComponent } from 'src/app/user/user.component';\nimport { LoginComponent } from 'src/app/login/login.component';\n\n// const routes: Routes = [];\nconst routes: Routes = [\n  { path : '', component: LoginComponent },\n  { path : 'structure', component: StructureComponent},\n  { path : 'user', component: UserComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router, ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private loginService : LoginService, private _snackBar : MatSnackBar, private router : Router) { }\n  hide = true;\n\n  ngOnInit(): void {\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  tryLogging(phone, password){\n    //console.log(\"Login button pressed\");\n    // console.log(\"Login attempted with phone:\" + phone + \" password : \" + password);\n    this.loginService.attemptLogin(phone, password)\n      .subscribe(data =>{\n        // console.log(data);\n        try{\n          var webapp_access = data[\"webapp_access\"];\n          var name = data[\"name\"];\n          // console.log(webapp_access);\n          if(webapp_access=='Y' || webapp_access=='X'){\n            this.router.navigate(['/','user', {webapp_access : webapp_access, name : name}], { skipLocationChange: true });\n            // { skipLocationChange: true }\n          }\n          else{\n            this.openSnackBar(\"Webapp access not available to user!!\",\"\");\n          }\n        }\n        catch{\n          this.openSnackBar(\"Userid/password mismatch!!\",\"\");\n        }\n        // this.router.navigate(['/','user'],{});\n      },\n      (error)=>{\n        this.openSnackBar(error.error.msg, \"X\");     \n        console.log(error.error);\n      })\n  }\n\n}\n","<div class=\"page-div form-group\" >\n    <div class=\"login-container\">\n    <mat-card class=\"login-card\">\n        <mat-card-header>\n          <div mat-card-avatar class=\"header-image\"></div>\n          <mat-card-title class=\"login-text-label\" > Sugam</mat-card-title>\n        </mat-card-header>\n    \n        <form #userForm=\"ngForm\">\n    \n        <div id=\"phoneView \">\n            <mat-form-field class=\"form-component\" appearance=\"outline\">\n              <mat-label>Phone number</mat-label>\n              <span matPrefix>+91 &nbsp;</span>\n              <input type=\"tel\" matInput placeholder=\"9876543210\" name=\"phone\" required pattern=\"^\\d{10}?\" #phone=\"ngModel\" [class.is-invalid]=\"phone.invalid\" ngModel value=[(contact_1)] >\n              <mat-icon matSuffix>mode_edit</mat-icon>\n              <mat-error>Phone number should be 10 digit long</mat-error>\n            </mat-form-field>\n        </div>\n    \n        <div id=\"passwordView \">\n          <mat-form-field appearance=\"outline\" class=\"form-component\">\n            <mat-label>Enter your password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" name=\"password\" ngModel required [class.is-invalid]=\"password.invalid\" #password=\"ngModel\" >\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n            <mat-error>Password cannot be blank</mat-error>\n          </mat-form-field>\n        </div>\n    \n        <button (click)=\"tryLogging(userForm.value.phone, userForm.value.password)\" [disabled]=\"!userForm.valid\" mat-raised-button class=\"submit-button\" color=\"primary\">Submit</button>\n      </form>\n      </mat-card>\n    </div>\n    </div>","import { Injectable } from '@angular/core';\nimport { HttpClientModule, HttpErrorResponse, HttpParams, HttpClient } from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { IStructure } from './structure';\nimport { GlobalConstants } from './global-constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private server_ip = GlobalConstants.ip_server;\n  private _url_user_get : string = \"http://\" + this.server_ip + \"/api/user\";\n  private _url_user_update : string = \"http://\" + this.server_ip + \"/api/user/update\";\n  private _url_user_add : string = \"http://\" + this.server_ip + \"/api/user/add\";\n  private _url_user_delete : string = \"http://\" + this.server_ip + \"/api/user/delete\";\n\n  constructor(private http : HttpClient) { }\n\n  getUsers() : Observable <IStructure[]>{\n    return this.http.get<any>(this._url_user_get)\n            .pipe(catchError(this.handleError));\n  }\n\n  updateUser(id, user) : Observable <any>{\n    let params = new HttpParams().set(\"id\", id).set(\"user\", user);\n    console.log(user);\n    return this.http.get<any>(this._url_user_update, {params : params})\n            .pipe(catchError(this.handleError));\n  }\n\n  addUser(user) : Observable <any>{\n    let params = new HttpParams().set(\"user\", user);\n    console.log(user);\n    return this.http.get<any>(this._url_user_add, {params : params})\n            .pipe(catchError(this.handleError));\n  }\n\n  deleteUser(id) : Observable <any>{\n    console.log(\"delete called\");\n    let params = new HttpParams().set(\"id\", id);\n    return this.http.get<any>(this._url_user_delete, {params : params})\n            .pipe(catchError(this.handleError));\n  }\n\n  handleError(error : HttpErrorResponse){\n    return throwError(error || \"Server Error\"); \n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}